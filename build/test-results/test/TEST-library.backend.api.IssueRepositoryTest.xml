<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="library.backend.api.IssueRepositoryTest" tests="6" skipped="0" failures="0" errors="0" timestamp="2024-02-25T09:27:57" hostname="linux" time="0.676">
  <properties/>
  <testcase name="IncompleteIssuesHaveNullReturnedDates()" classname="library.backend.api.IssueRepositoryTest" time="0.562"/>
  <testcase name="IssuesWithNullReturnDateTest()" classname="library.backend.api.IssueRepositoryTest" time="0.021"/>
  <testcase name="IssuesWithAssociatedUserAreReturned()" classname="library.backend.api.IssueRepositoryTest" time="0.018"/>
  <testcase name="IssuesWithExceedingIssuePeriodTest()" classname="library.backend.api.IssueRepositoryTest" time="0.026"/>
  <testcase name="IssuesWithNotNullReturnDateTest()" classname="library.backend.api.IssueRepositoryTest" time="0.02"/>
  <testcase name="CompleteIssuesHaveNonNullReturnedDate()" classname="library.backend.api.IssueRepositoryTest" time="0.021"/>
  <system-out><![CDATA[14:57:53.977 [Test worker] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils -- Could not detect default configuration classes for test class [library.backend.api.IssueRepositoryTest]: IssueRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
14:57:54.087 [Test worker] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper -- Found @SpringBootConfiguration library.backend.api.ApiApplication for test class library.backend.api.IssueRepositoryTest

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::                (v3.2.2)

14:57:54.403  INFO --- [t worker] l.backend.api.IssueRepositoryTest        : Starting IssueRepositoryTest using Java 17.0.10 with PID 56234 (started by manan in /home/manan/programs/tuningbill/library-management/backend/api)
14:57:54.405  INFO --- [t worker] l.backend.api.IssueRepositoryTest        : The following 1 profile is active: "test"
14:57:54.768  INFO --- [t worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:57:54.843  INFO --- [t worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 57 ms. Found 3 JPA repository interfaces.
14:57:54.883  INFO --- [t worker] beddedDataSourceBeanFactoryPostProcessor : Replacing 'dataSource' DataSource bean with embedded version
14:57:55.001  INFO --- [t worker] o.s.j.d.e.EmbeddedDatabaseFactory        : Starting embedded database: url='jdbc:h2:mem:328c2818-e6bb-4305-b6f5-86d4f0ca725e;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
14:57:55.200  INFO --- [t worker] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
14:57:55.242  INFO --- [t worker] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.4.1.Final
14:57:55.272  INFO --- [t worker] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
14:57:55.433  INFO --- [t worker] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
14:57:55.466  WARN --- [t worker] org.hibernate.orm.deprecation            : HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
14:57:56.184  INFO --- [t worker] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
Hibernate: drop table if exists books cascade 
Hibernate: drop table if exists issues cascade 
Hibernate: drop table if exists users cascade 
Hibernate: create table books (price float(24), publish_date date not null, quantity integer not null, id bigint generated by default as identity, author varchar(255) not null, genre varchar(255) not null, isbn varchar(255) not null, title varchar(255) not null, primary key (id))
Hibernate: create table issues (issue_date date not null, issue_period integer not null, return_date date, book_id bigint, id bigint generated by default as identity, user_id bigint not null, primary key (id))
Hibernate: create table users (id bigint generated by default as identity, email varchar(255) not null unique, name varchar(255), password varchar(255), phone_no varchar(255), role varchar(255), primary key (id))
Hibernate: alter table if exists issues add constraint FKjx235bmcudg6vohm5tv8s36wk foreign key (book_id) references books
Hibernate: alter table if exists issues add constraint FKcigc16s3flsg53i2sy0m37e foreign key (user_id) references users
14:57:56.229  INFO --- [t worker] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
14:57:56.580  INFO --- [t worker] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
14:57:57.257  INFO --- [t worker] l.backend.api.IssueRepositoryTest        : Started IssueRepositoryTest in 3.103 seconds (process running for 4.037)
Hibernate: insert into users (email,name,password,phone_no,role,id) values (?,?,?,?,?,default)
Hibernate: insert into issues (book_id,issue_date,issue_period,return_date,user_id,id) values (?,?,?,?,?,default)
Hibernate: insert into issues (book_id,issue_date,issue_period,return_date,user_id,id) values (?,?,?,?,?,default)
Hibernate: insert into issues (book_id,issue_date,issue_period,return_date,user_id,id) values (?,?,?,?,?,default)
Hibernate: select i1_0.id,i1_0.book_id,i1_0.issue_date,i1_0.issue_period,i1_0.return_date,i1_0.user_id from issues i1_0 where i1_0.return_date is null and i1_0.user_id=?
Hibernate: select u1_0.id,u1_0.email,u1_0.name,u1_0.password,u1_0.phone_no,u1_0.role from users u1_0 where u1_0.id=?
Hibernate: insert into users (email,name,password,phone_no,role,id) values (?,?,?,?,?,default)
Hibernate: insert into issues (book_id,issue_date,issue_period,return_date,user_id,id) values (?,?,?,?,?,default)
Hibernate: insert into issues (book_id,issue_date,issue_period,return_date,user_id,id) values (?,?,?,?,?,default)
Hibernate: insert into issues (book_id,issue_date,issue_period,return_date,user_id,id) values (?,?,?,?,?,default)
Hibernate: select i1_0.id,i1_0.book_id,i1_0.issue_date,i1_0.issue_period,i1_0.return_date,i1_0.user_id from issues i1_0 where i1_0.return_date is null
Hibernate: select u1_0.id,u1_0.email,u1_0.name,u1_0.password,u1_0.phone_no,u1_0.role from users u1_0 where u1_0.id=?
Hibernate: insert into users (email,name,password,phone_no,role,id) values (?,?,?,?,?,default)
Hibernate: insert into issues (book_id,issue_date,issue_period,return_date,user_id,id) values (?,?,?,?,?,default)
Hibernate: insert into issues (book_id,issue_date,issue_period,return_date,user_id,id) values (?,?,?,?,?,default)
Hibernate: insert into issues (book_id,issue_date,issue_period,return_date,user_id,id) values (?,?,?,?,?,default)
Hibernate: select i1_0.id,i1_0.book_id,i1_0.issue_date,i1_0.issue_period,i1_0.return_date,i1_0.user_id from issues i1_0 left join users u1_0 on u1_0.id=i1_0.user_id where u1_0.id=?
Hibernate: select u1_0.id,u1_0.email,u1_0.name,u1_0.password,u1_0.phone_no,u1_0.role from users u1_0 where u1_0.id=?
Hibernate: insert into users (email,name,password,phone_no,role,id) values (?,?,?,?,?,default)
Hibernate: insert into issues (book_id,issue_date,issue_period,return_date,user_id,id) values (?,?,?,?,?,default)
Hibernate: insert into issues (book_id,issue_date,issue_period,return_date,user_id,id) values (?,?,?,?,?,default)
Hibernate: insert into issues (book_id,issue_date,issue_period,return_date,user_id,id) values (?,?,?,?,?,default)
Hibernate: select i1_0.id,i1_0.book_id,i1_0.issue_date,i1_0.issue_period,i1_0.return_date,i1_0.user_id from issues i1_0 where i1_0.return_date is null and (datediff(day,i1_0.issue_date,?)>i1_0.issue_period)
Hibernate: select u1_0.id,u1_0.email,u1_0.name,u1_0.password,u1_0.phone_no,u1_0.role from users u1_0 where u1_0.id=?
Hibernate: insert into users (email,name,password,phone_no,role,id) values (?,?,?,?,?,default)
Hibernate: insert into issues (book_id,issue_date,issue_period,return_date,user_id,id) values (?,?,?,?,?,default)
Hibernate: insert into issues (book_id,issue_date,issue_period,return_date,user_id,id) values (?,?,?,?,?,default)
Hibernate: insert into issues (book_id,issue_date,issue_period,return_date,user_id,id) values (?,?,?,?,?,default)
Hibernate: select i1_0.id,i1_0.book_id,i1_0.issue_date,i1_0.issue_period,i1_0.return_date,i1_0.user_id from issues i1_0 where i1_0.return_date is not null
Hibernate: insert into users (email,name,password,phone_no,role,id) values (?,?,?,?,?,default)
Hibernate: insert into issues (book_id,issue_date,issue_period,return_date,user_id,id) values (?,?,?,?,?,default)
Hibernate: insert into issues (book_id,issue_date,issue_period,return_date,user_id,id) values (?,?,?,?,?,default)
Hibernate: insert into issues (book_id,issue_date,issue_period,return_date,user_id,id) values (?,?,?,?,?,default)
Hibernate: select i1_0.id,i1_0.book_id,i1_0.issue_date,i1_0.issue_period,i1_0.return_date,i1_0.user_id from issues i1_0 where i1_0.return_date is not null and i1_0.user_id=?
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
